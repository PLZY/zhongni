server.port=18082
#如果使用了nacos，还相当于指定了dataId，会去nacos配置列表获取对应的配置信息
spring.application.name=zhongni-oauth
# 发布路径
server.servlet.context-path=${project.request.prefix}
## Nacos注册发现地址（注册中心）
spring.cloud.nacos.discovery.server-addr=192.168.0.106:8101
## Nacos 配置拉取地址（配置中心）
spring.cloud.nacos.config.server-addr=192.168.0.106:8101

# 综合（注册、配置中心用一个nacos地址）
#spring.cloud.nacos.server-addr=192.168.77.129:8101


############### 数据库配置 ###############
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:${database.type}://${${database.type}.host}:${${database.type}.port}/${${database.type}.database.name}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&rewriteBatchedStatements=true
spring.datasource.username=${${database.type}.username}
spring.datasource.password=${${database.type}.password}

############### 数据库连接池配置 ###############
# 数据源类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
spring.datasource.hikari.minimum-idle=5
# 最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
spring.datasource.hikari.maximum-pool-size=20
# 自动提交从池中返回的连接
spring.datasource.hikari.auto-commit=true
# 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒
spring.datasource.hikari.idle-timeout=30000
# 连接池名称，默认HikariPool-1
spring.datasource.hikari.pool-name=Zhongni-HikariCP
# 连接最大存活时间，不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
spring.datasource.hikari.max-lifetime=1800000
# 连接超时时间：毫秒，小于250毫秒，否则被重置为默认值30秒
spring.datasource.hikari.connection-timeout=60000
# 用于测试连接是否可用的查询语句
spring.datasource.hikari.connection-test-query=SELECT 1

############### 分页插件配置 ###############
# 标识是数据库方言
pagehelper.helperDialect=${database.type}
# 如果启用合理化，则pageNum<1时会查询第一页，pageNum>pages时会查询最后一页
pagehelper.reasonable=false
# 为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
pagehelper.params=count=countSql
# 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
pagehelper.supportMethodsArguments=false
# 如果 pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）
pagehelper.pageSizeZero=true